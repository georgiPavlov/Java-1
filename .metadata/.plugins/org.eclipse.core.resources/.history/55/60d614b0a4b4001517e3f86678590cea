package Wednesday;

public class BST <T extends Comparable<T>> {
	private class Node implements Comparable<Node> {
		public T value;
		public int depth;
		public int height;
		public Node left;
		public Node right;
		public Node parent;
		
		Node(T val) {
			this.value = val;
			this.depth = 0;
			this.height = 0;
			this.left = null;
			this.right = null;
			this.parent = null;
		}

		@Override
		public int compareTo(BST<T>.Node other) {
			return this.value.compareTo(other.value);
		}
	};
	
	private Node root;
	
	BST() {
		root = null;
	}
	
	public void add (T element) {
		if (root == null) {
			root = new Node(element);
		} else {
			
		}
	}
	
}
